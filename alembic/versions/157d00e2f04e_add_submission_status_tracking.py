"""add_submission_status_tracking

Revision ID: 157d00e2f04e
Revises: b607a8e2588c
Create Date: 2025-08-11 15:09:57.124715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '157d00e2f04e'
down_revision: Union[str, Sequence[str], None] = 'b607a8e2588c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'category', ['id'])
    op.create_unique_constraint(None, 'challenge', ['id'])
    op.create_unique_constraint(None, 'model', ['id'])
    op.create_unique_constraint(None, 'result', ['id'])
    
    # Create enum type first (only if it doesn't exist)
    submission_status_enum = sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='submissionstatus')
    
    # Check if enum type already exists
    connection = op.get_bind()
    result = connection.execute(
        sa.text("SELECT 1 FROM pg_type WHERE typname = 'submissionstatus'")
    ).fetchone()
    
    if not result:
        submission_status_enum.create(connection)
    
    # Add status column as nullable first
    op.add_column('submission', sa.Column('status', submission_status_enum, nullable=True))
    
    # Update existing records to have 'COMPLETED' status (assuming existing submissions are completed)
    op.execute("UPDATE submission SET status = 'COMPLETED' WHERE status IS NULL")
    
    # Now alter column to be NOT NULL
    op.alter_column('submission', 'status', nullable=False)
    
    # Add status_message column
    op.add_column('submission', sa.Column('status_message', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'submission', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'submission', type_='unique')
    op.drop_column('submission', 'status_message')
    op.drop_column('submission', 'status')
    op.drop_constraint(None, 'result', type_='unique')
    op.drop_constraint(None, 'model', type_='unique')
    op.drop_constraint(None, 'challenge', type_='unique')
    op.drop_constraint(None, 'category', type_='unique')
    # ### end Alembic commands ###
