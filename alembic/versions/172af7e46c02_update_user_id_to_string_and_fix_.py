"""Update User ID to string and fix foreign keys

Revision ID: 172af7e46c02
Revises: 6ce231dda7ba
Create Date: 2025-08-07 10:37:41.659200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '172af7e46c02'
down_revision: Union[str, Sequence[str], None] = '6ce231dda7ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'category', ['id'])
    op.alter_column('challenge', 'created_by',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'challenge', ['id'])
    op.create_unique_constraint(None, 'model', ['id'])
    op.alter_column('result', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'result', ['id'])
    op.alter_column('submission', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'submission', ['id'])
    op.add_column('user', sa.Column('username', sa.String(), nullable=False))
    op.alter_column('user', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('user', 'role',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.alter_column('user', 'role',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user', 'id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('user', 'username')
    op.drop_constraint(None, 'submission', type_='unique')
    op.alter_column('submission', 'user_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_constraint(None, 'result', type_='unique')
    op.alter_column('result', 'user_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_constraint(None, 'model', type_='unique')
    op.drop_constraint(None, 'challenge', type_='unique')
    op.alter_column('challenge', 'created_by',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_constraint(None, 'category', type_='unique')
    # ### end Alembic commands ###
